
你觉得前端工程的价值体现在哪里：
    1、为简化用户使用提供技术支持；
    2、为多个浏览器兼容性提供支持；
    3、为提高用户的浏览速度提供支持；
    4、为跨平台或者其它基于webkit或其它渲染引擎的应用提供技术支持；
    5、为展示数据提供支持；
    
    
 谈谈性能优化问题：
    1、代码层面：避免使用css表达式、避免使用高级选择器、通配选择器
    2、缓存利用：缓存Ajax、使用cdn、使用外部的js以及css便于缓存、减少DNS查找 等
    3、请求数量：合并样式和脚本、使用css图片精灵、初始首屏之外的图片 、资源按需加载、静态资源延迟加载
    4、请求宽带：压缩文件、开启GZIP
    
    代码层面的优化：
        用innerHTML代替DOM操作，减少DOM操作次数，优化JS性能；
        用setTimeout 来避免页面失去响应；
        缓存DOM节点查找的结果；
        避免使用css表达式；
        避免全局查询；
        避免使用with（with会创建自己的作用域，会增加作用域链的长度）；
        多个变量声明合并；
        避免图片或iFrame等的空的 Src （空的src会重新加载当前的页面，影响速度和效率）；
        尽量避免在html标签里写 style 样式；
    移动端的性能优化：
        尽量使用css3动画，开启硬件加速；
        适当使用touch时间代替 click事件；
        避免使用css3渐变阴影效果；
        可以使用transform：translateZ(0) 来开启硬件加速；
        不滥用float。（float在渲染时计算量比较大，尽量减少使用）；
        不滥用web字体。web字体需要下载、解析、重绘当前页面，尽量减少使用；
        合理使用requestAnimationFrame动画代替setTimeout
        CSS中的属性（CSS3 transitions、CSS3 3D transforms、Opacity、Canvas、WebGL、Video）会触发GPU渲染，请合理使用。过渡使用会引发手机过耗电增加
        PC端的在移动端同样适用
        
        
